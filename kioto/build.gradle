plugins {
    id 'java-library'
    id 'application'
}

application {
    mainClass = 'kioto.application.MainApplication'
}

version 'unspecified'

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'org.apache.kafka', name: 'kafka_2.13', version: '2.8.1'
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.7'

    implementation group: 'com.maxmind.geoip', name: 'geoip-api', version: '1.3.1'

    implementation group: 'com.github.javafaker', name: 'javafaker', version: '0.15'

}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': application.getMainClass() )
    }
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}